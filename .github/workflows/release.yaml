name: Push release version to Docker Hub

on:
  push:
    branches:
      - release/*
jobs:
  tag_and_push:
    name: Create a release version
    environment: release
    runs-on: ubuntu-latest
    outputs:
      release_version: ${{ steps.image_name.outputs.RELEASE_VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - id: image_name
        name: Form proper Docker Image Name
        run: |
          RELEASE_VERSION="${{ vars.VERSION_PREFIX }}.${{ github.run_id }}.release"
          OLD_DOCKER_IMAGE="${{ vars.DOCKER_REGISTRY }}/${{ vars.DOCKER_NAMESPACE }}/server:latest"
          NEW_DOCKER_IMAGE="${{ vars.DOCKER_REGISTRY }}/${{ vars.DOCKER_NAMESPACE }}/server:$RELEASE_VERSION"

          echo "OLD_DOCKER_IMAGE=$OLD_DOCKER_IMAGE" >> $GITHUB_OUTPUT
          echo "NEW_DOCKER_IMAGE=$NEW_DOCKER_IMAGE" >> $GITHUB_OUTPUT
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_OUTPUT

      - name: Logging into Docker Registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Tagging and Pushing into Docker Registry
        run: |
          docker pull ${{ steps.image_name.outputs.OLD_DOCKER_IMAGE }}
          docker tag ${{ steps.image_name.outputs.OLD_DOCKER_IMAGE }} ${{ steps.image_name.outputs.NEW_DOCKER_IMAGE }}
          docker push ${{ steps.image_name.outputs.NEW_DOCKER_IMAGE }}

  record_version:
    needs: tag_and_push
    name: Record release version for deployment
    uses: vuevideo/util-scripts/.github/workflows/versions.reusable.yml@main
    with:
      trigger: server
      version: ${{ needs.tag_and_push.outputs.release_version }}
    secrets:
      VERSIONS_TOKEN: ${{ secrets.VERSIONS_TOKEN }}
